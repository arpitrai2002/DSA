class Solution {
public:
    int findPairs(vector<int>& nums, int k) {
        sort(nums.begin(),nums.end());
        set<pair<int,int>> ans;
        int i=0;
        int j=1;
        while(j<nums.size()){
            int diff=nums[j]-nums[i];
            if(diff==k){
                ans.insert({nums[i],nums[j]});
                i++;
                j++;
            }
            else if(diff>k){
                i++;
            }
            else{
                j++;
            }
        if(i==j) j++;

        }

        return ans.size();
    }
};

class Solution {
public:
    int bs(vector<int> arr,int start,int val){
        int high=arr.size()-1;
        while(start<=high){
            int mid=start+(high-start)/2;
            if(arr[mid]==val){
                return mid;
            }
            else if(arr[mid]<val){
                start=mid+1;
            }
            else{
                high=mid-1;
            }
        }
        return -1;
    }
    int findPairs(vector<int>& nums, int k) {
        set<pair<int,int>> ans;
        sort(nums.begin(),nums.end());
        for(int i=0;i<nums.size();i++){
            int a=nums[i]+k;
            if(bs(nums,i+1,a)!=-1){
                ans.insert({nums[i],a});
            }
        }
        return ans.size();
    }
};

which solution is best